# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as two services called "api" and “database”
# The service “api” is built from the Dockerfile in the /app directory,
# and the service “database (aka db)” uses the official MongoDB image
# from Docker Hub - https://hub.docker.com/_/mongo. 
# You can add other services your application may depend on here.

services:
  db:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    env_file: [ .tdd_env ]
    volumes:
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      network_db:
        aliases:
          - db

  db-ui:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file: [ .tdd_env ]
    depends_on:
      - db
    networks:
      network_db:
          aliases:
            - db-ui

  vuejs-ui:
    build:
      context: ./vuejs/
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    depends_on:
      - api
    develop:
      watch:
        - path: ./vuejs/src
          target: /app/src
          action: sync
        - path: ./vuejs/package.json
          target: /app/package.json
          action: sync+restart
        - path: ./vuejs/vite.config.js
          target: /app/vite.config.js
          action: sync+restart
    networks:
      network_api:
          aliases:
            - ui

  ui-test:
    build:
      context: ./vuejs/
      dockerfile: Dockerfile.dev
    command: ["npm", "run", "test:unit"]

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    env_file: [ .tdd_env ]
    ports:
      - "5172:5172"
    develop:
      watch:
        - path: ./api/app
          target: /app
          action: sync
        - path: ./api/requirement.txt
          target: /app/requirement.txt
          action: sync+restart
        - path: ./api/app/main.py
          target: /app/main.py
          action: sync+restart
    depends_on:
      - db
    networks:
      network_db:
          aliases:
            - api
      network_api:
          aliases:
            - api

  db-postgresql:
   image: postgres:latest
   ports:
     - "5432:5432"
   volumes:
     - postgres_data:/var/lib/postgresql/data
   env_file: [ .tdd_env ]

  django-web:
    build:
      context: ./django_ui/
      dockerfile: Dockerfile
    env_file: [ .tdd_env ]
    ports:
      - "5174:5174"
    develop:
      watch:
        - path: ./django_ui/
          target: /app
          action: sync
        - path: ./django_ui/requirement.txt
          target: /app/requirement.txt
          action: sync+restart
        - path: ./django_ui/giledrose_shop/
          target: /app/giledrose_shop
          action: sync+restart
    depends_on:
      - db-postgresql
    networks:
      network_web:
          aliases:
            - django

networks:
  network_db:
    driver: bridge
  network_api:
    driver: bridge
  network_web:
    driver: bridge

volumes:
   postgres_data: